# the file holds the paths to default files that will be loaded or saved
logs:
    name: "logs"
    type: "dir"
    doc: "default folder for logs"
data:
    visual_genome:
        pics:
            name: "../Pics"
            type: "dir"
            doc: "path to visual genome pics"

        hierarchy_mapping_objects:
            name: "Data/VisualGenome/hierarchy_mapping_objects.p"
            type: "pickle"
            doc: "dictionary mapping supported object labels to object ids"
        hierarchy_mapping_predicates:
            name: "Data/VisualGenome/hierarchy_mapping_predicates.p"
            type: "pickle"
            doc: "dictionary mapping supported object labels to predicate ids"

        # Don't know what is it..1000 entities/50000 entities?
        filtered_data:
            name: "Data/VisualGenome/filtered_data.p"
            type: "pickle"
            doc:  "visual genome data filtered according to the most popular objects and predicates and includes negative predicates 1X3"

        # Load pre-processing data mapping
        object_alias:
            name: "../Data/VisualGenome/mini/object_alias.txt"
            type: "text"
            doc:  "objects mapping between old label to new label"
        object_list:
            name: "../Data/VisualGenome/mini/object_list.txt"
            type: "text"
            doc:  "150 objects labels"
        predicate_alias:
            name: "../Data/VisualGenome/mini/predicate_alias.txt"
            type: "text"
            doc:  "predicates mapping between old label to new label"
        predicate_list:
            name: "../Data/VisualGenome/mini/predicate_list.txt"
            type: "text"
            doc:  "50 predicates labels"

        # Entities - before pre-processing
        mini_entities:
            name: "Data/VisualGenome/mini_entities.p"
            type: "pickle"
            doc:  "raw visual genome data (ONLY 1000 entities)"
        full_entities:
            name: "Data/VisualGenome/final_entities.p"
            type: "pickle"
            doc:  "raw visual genome data (108000 entities)"

        # The Data after pre-processing by entities
        mini_filtered_data:
            name: "Data/VisualGenome/mini_filtered_data.p"
            type: "pickle"
            doc:  "visual genome data (ONLY 1000 entities) filtered according to the most popular objects and predicates and includes negative predicates 1X3"
        full_filtered_data:
            name: "Data/VisualGenome/full_filtered_data.p"
            type: "pickle"
            doc:  "visual genome data (108000 entities) filtered according to the most popular objects and predicates and includes negative predicates 1X3"

        # Relations
        mini_relations:
            name: "Data/VisualGenome/mini_visual_filtered_relations.p"
            type: "pickle"
            doc:  "Relations (ONLY FROM 1000 ENTITIES) includes positive and negative predicates 1X3"
        full_relations:
            name: "Data/VisualGenome/full_visual_filtered_relations.p"
            type: "pickle"
            doc:  "Relations (ONLY FROM 108000 ENTITIES) includes positive and negative predicates 1X3"

features_extraction:
    visual:

    language:

scene_graph_module:
    train:

    eval:

scene_graph_base_module:
    visual_module:
        detections:
            name: "SceneGraphBaseModule/VisualModule/detections.p"
            type: "pickle"
            doc: "detections of mini data with neg"

        object_cnn:
            name: "FeaturesExtraction/ObjectCNN/Fri_Jun__2_19:16:26_2017/model_vg_resnet50.hdf5"
            type: "dir"
            doc: "path to object cnn"
            versions:
                1:
                    date: "xx:xx:xx"
                    name: "FeaturesExtraction/ObjectCNN/Fri_Jun__1_00:00:00_2017/model_vg_resnet50.hdf5"
                    doc: "trained without negative examples"

        predicate_cnn:
            name: "FeaturesExtraction/PredicateCNN/Wed_Jun_14_20:25:16_2017/model_vg_resnet50.hdf5"
            type: "dir"
            doc: "path to predicate cnn"
    train:
        params:
            name: "SceneGraphBaseModule/Train/params.yaml"
            type: "yaml"
            doc: "train parameters"
        final_filtered_data:
            name: "SceneGraphBaseModule/Train/final_filtered_data.p"
            type: "pickle"
            doc:  "on top of filtered data - filter urls and negative predicates to be 1x1 and convert to Data class"
        saved_params:
            name: "SceneGraphBaseModule/Train/saved_params"
            type: "dir"
            doc: "dir storing saved params per set of hyper paramters"
    eval:
        final_eval_filtered_data:
            name: "SceneGraphBaseModule/Eval/eval_module_data.p"
            type: "pickle"
            nof_objects: 3
            doc:  "on top of filtered data - filter urls"
            versions:
                1:
                  name: "SceneGraphBaseModule/Eval/eval_module_data_pos.p"
                  doc: "with positive examples only"

        module:
            name: "SceneGraphBaseModule/Train/SavedParams/best_params.npy"
            type: "pickle"
            doc:  "module weights to evaluate"
        stat:
            name: "SceneGraphBaseModule/Eval/detections_stat.p"
            type: "pickle"
            doc: "store detections stat tuple of (entity detectionsStat score) per image"

word_embedding:
    glove:
        original300:
            name: "WordEmbedding/glove/glove.6B.300d.txt"
            type: "text"
            doc: "data from glove project storing word to vec info"
        original50:
            name: "WordEmbedding/glove/glove.6B.50d.txt"
            type: "text"
            doc: "data from glove project storing word to vec info"
        embed300:
            name: "WordEmbedding/glove/glove300.p"
            type: "pickle"
            nof_objects: 3
            doc: "storing 1. matrix converting from word index to vector; 2. vocabulary; 3. word to index dictionary"
        embed50:
            name: "WordEmbedding/glove/glove50.p"
            type: "pickle"
            nof_objects: 3
            doc: "storing 1. matrix converting from word index to vector; 2. vocabulary; 3. word to index dictionary"
